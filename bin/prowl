#!/usr/bin/perl -w
# ProwlScript, to communicate with the Prowl server.
# Copyright 2009 Zachary West
#
# This requires running Prowl on your device.
# See the Prowl website <http://prowl.weks.net>

use strict;
use LWP::UserAgent;
use Getopt::Long;
use Pod::Usage;
use Term::ReadKey;

# Grab our options.
my %options = ();
GetOptions(\%options, 'username=s', 'password=s', 'passwordfile=s',
					  'application=s', 'event=s', 'notification=s',
					  'help|?') or pod2usage(2);

$options{'application'} ||= "ProwlScript";

pod2usage(-verbose => 2) if (exists($options{'help'}));
pod2usage(-message => "$0: Event name is required") if (!exists($options{'event'}));
pod2usage(-message => "$0: Notification text is required") if (!exists($options{'notification'}));

if (!exists($options{'username'})) {
	print "Username: ";
	$options{'username'} = <STDIN>;
	
	chomp $options{'username'};
}

# Get the password from STDIN if one isn't provided via a file or from the command line.
if (!exists($options{'password'}) && !exists($options{'passwordfile'})) {
	print "Password: ";

	ReadMode('noecho');
	$options{'password'} = <STDIN>;
	ReadMode('restore');
	
	chomp $options{'password'};
	print "\n";
} elsif (exists($options{'passwordfile'})) {
	open(PASSWORDFILE, $options{'passwordfile'}) or die($!);
	$options{'password'} = <PASSWORDFILE>;
	close(PASSWORDFILE);
	
	chomp $options{'password'};
}

# URL encode our arguments
$options{'application'} =~ s/([^A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg;
$options{'event'} =~ s/([^A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg;
$options{'notification'} =~ s/([^A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg;

# Generate our HTTP request.
my ($userAgent, $request, $response, $requestURL);
$userAgent = LWP::UserAgent->new;
$userAgent->agent("ProwlScript/1.0");

$requestURL = sprintf("https://prowl.weks.net/api/add_notification.php?application=%s&event=%s&description=%s",
				$options{'application'},
				$options{'event'},
				$options{'notification'});

$request = HTTP::Request->new(GET => $requestURL);
$request->authorization_basic($options{'username'}, $options{'password'});

$response = $userAgent->request($request);

if ($response->is_success) {
	print "Notification successfully posted.\n";
} elsif ($response->code == 401) {
	print STDERR "Notification not posted: incorrect username or password.\n";
} else {
	print STDERR "Notification not posted: " . $response->status_line . "\n";
}

__END__

=head1 NAME 

prowl - Send Prowl notifications

=head1 SYNOPSIS

prowl.pl [options] event_information

 Options:
   -help              Display all help information.
   -username=...      Your Prowl username.
   -password=...      Your Prowl password.
   -passwordfile=...  A file containing your Prowl password.
   -application=...   The name of the application.
   -event=...         The name of the event.
   -notification=...  The text of the notification.

=head1 OPTIONS

=over 8

=item B<-username>

Your Prowl username.

=item B<-password>

Your Prowl password. It is not recommend you use this, use the passwordfile option.

=item B<-passwordfile>

A password containing one line, which has your Prowl password on it.

=item B<-application>

The name of the Application part of the notification. If none is provided, ProwlScript is used.

=item B<-event>

The name of the Event part of the notification. This is generally the action which occurs, such as "disk partitioning completed."

=item B<-notification>

The text of the notification, which has more details for a particular event. This is generally the description of the action which occurs, such as "The disk /dev/abc was successfully partitioned."

=back

=head1 DESCRIPTION

B<This program> sends a notification to the Prowl server, which is then forwarded to your device running the Prowl application.

=head1 HELP

For more assistance, visit the Prowl website at <http://prowl.weks.net>.

=cut